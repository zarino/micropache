#!/bin/sh

# Starts an Apache server in the current directory.
# Built to quickly run PHP sites on a Mac, using the system Apache binary.

# http://httpd.apache.org/docs/2.4/programs/httpd.html

TEMPDIR=`mktemp -d -t 'micropache'`
dir=$(pwd)
OSX_VERSION=`sw_vers -productVersion | cut -d . -f 2`
FLAG=""
MUTEX=""
APACHE_USER="_www"
APACHE_GROUP="_www"

use_port()
{
    PORT="$1"
    if [ "$1" -lt "1024" ]; then
        SUDO="sudo"
    fi
}

print_help()
{
    cat <<EOF
usage: micropache [--port <num>] [--user <name>] [--group <name>] [--uid <id>]
                  [--gid <id>] [--as-me]

  --port <num>    Run the Apache server on the given port. Requesting a port
                  below 1024 will run the httpd process under sudo, requiring
                  an administrator password. If you do not specify a port, a
                  free one will be chosen automatically, starting at 8000.
  --user <name>   Run httpd as the given filesystem user. Defaults to "_www".
  --group <name>  Run httpd as the given filesystem group. Defaults to "_www".
  --uid <id>      Like --user, except you provide a UID rather than a name.
  --gid <id>      Like --group, except you provide a GID rather than a name.
  --as-me         Run httpd as your current user, with your username and group.

Example usage:

  micropache
  micropache --port 80
  micropache --port 4000
  micropache --user www-data --group www-data
  micropache --uid 520 --gid 20
  micropache --as-me

EOF
}

# Starting with 10.10 Yosemite, Apple upgraded the bundled Apache
# from 2.2 to 2.4, requiring a slightly different config.
if [ $OSX_VERSION -lt 10 ]; then
    FLAG='-D Mavericks'
    MUTEX="-c LockFile $TEMPDIR/accept.lock"
else
    FLAG='-D YosemiteOrLater'
    MUTEX="-c Mutex file:$TEMPDIR default"
fi

# Parse command line arguments.
while test $# -gt 0
do
    case "$1" in
        --port)
            use_port $2
            shift
            ;;
        --port80)
            use_port 80
            ;;
        --user)
            APACHE_USER=$2
            shift
            ;;
        --group)
            APACHE_GROUP=$2
            shift
            ;;
        --uid)
            APACHE_USER=$(id -u -n $2)
            shift
            ;;
        --gid)
            APACHE_GROUP=$(id -g -n $2)
            shift
            ;;
        --as-me)
            APACHE_USER=$(id -u -n)
            APACHE_GROUP=$(id -g -n)
            ;;
        --help)
            print_help
            exit 0;
            ;;
        -h)
            print_help
            exit 0;
            ;;
        --*) echo "unknown option $1"
            ;;
        *) echo "unknown argument $1"
            ;;
    esac
    shift
done

# If user hasn't requested a specific port, find a free one.
if [ -z $PORT ]; then
    while :; do
        for (( PORT=8000 ; PORT < 9000 ; PORT++ )); do
            nc -z localhost "$PORT" >/dev/null || break 2
        done
        echo "No free local ports available"
        exit 2;
    done
fi

# Write out the Apache config file.
cat <<EOF > "$TEMPDIR/micropache-httpd.conf"
# Generated automatically by micropache.

LoadModule authn_file_module libexec/apache2/mod_authn_file.so
LoadModule authz_host_module libexec/apache2/mod_authz_host.so
LoadModule authz_groupfile_module libexec/apache2/mod_authz_groupfile.so
LoadModule authz_user_module libexec/apache2/mod_authz_user.so
LoadModule auth_basic_module libexec/apache2/mod_auth_basic.so
LoadModule reqtimeout_module libexec/apache2/mod_reqtimeout.so
LoadModule filter_module libexec/apache2/mod_filter.so
LoadModule deflate_module libexec/apache2/mod_deflate.so
LoadModule mime_module libexec/apache2/mod_mime.so
LoadModule log_config_module libexec/apache2/mod_log_config.so
LoadModule env_module libexec/apache2/mod_env.so
LoadModule headers_module libexec/apache2/mod_headers.so
LoadModule setenvif_module libexec/apache2/mod_setenvif.so
LoadModule version_module libexec/apache2/mod_version.so
LoadModule proxy_module libexec/apache2/mod_proxy.so
LoadModule proxy_connect_module libexec/apache2/mod_proxy_connect.so
LoadModule proxy_ftp_module libexec/apache2/mod_proxy_ftp.so
LoadModule proxy_http_module libexec/apache2/mod_proxy_http.so
LoadModule proxy_scgi_module libexec/apache2/mod_proxy_scgi.so
LoadModule proxy_ajp_module libexec/apache2/mod_proxy_ajp.so
LoadModule proxy_balancer_module libexec/apache2/mod_proxy_balancer.so
LoadModule status_module libexec/apache2/mod_status.so
LoadModule autoindex_module libexec/apache2/mod_autoindex.so
LoadModule cgi_module libexec/apache2/mod_cgi.so
LoadModule vhost_alias_module libexec/apache2/mod_vhost_alias.so
LoadModule negotiation_module libexec/apache2/mod_negotiation.so
LoadModule dir_module libexec/apache2/mod_dir.so
LoadModule alias_module libexec/apache2/mod_alias.so
LoadModule rewrite_module libexec/apache2/mod_rewrite.so
LoadModule php5_module libexec/apache2/libphp5.so
<IfDefine YosemiteOrLater>
    LoadModule authn_core_module libexec/apache2/mod_authn_core.so
    LoadModule authz_core_module libexec/apache2/mod_authz_core.so
    LoadModule access_compat_module libexec/apache2/mod_access_compat.so
    LoadModule proxy_fcgi_module libexec/apache2/mod_proxy_fcgi.so
    LoadModule proxy_wstunnel_module libexec/apache2/mod_proxy_wstunnel.so
    LoadModule proxy_express_module libexec/apache2/mod_proxy_express.so
    LoadModule slotmem_shm_module libexec/apache2/mod_slotmem_shm.so
    LoadModule lbmethod_byrequests_module libexec/apache2/mod_lbmethod_byrequests.so
    LoadModule lbmethod_bytraffic_module libexec/apache2/mod_lbmethod_bytraffic.so
    LoadModule lbmethod_bybusyness_module libexec/apache2/mod_lbmethod_bybusyness.so
    LoadModule unixd_module libexec/apache2/mod_unixd.so
</IfDefine>

AddHandler php5-script .php

<IfModule unixd_module>
  User $APACHE_USER
  Group $APACHE_GROUP
</IfModule>

<Directory "$dir">
  Options FollowSymLinks Indexes
  AllowOverride All
  <IfDefine YosemiteOrLater>
      Require all granted
  </IfDefine>
</Directory>

<IfModule dir_module>
  DirectoryIndex index.html index.php
</IfModule>

EOF

echo "Listening on port [31m$PORT[m"

$SUDO /usr/sbin/httpd -k start \
  -c "DocumentRoot $dir" \
  -f "$TEMPDIR/micropache-httpd.conf" \
  "$MUTEX" \
  -c "PidFile $TEMPDIR/httpd.pid" \
  -c "Listen $PORT" \
  -c "AccessFileName .htaccess" \
  -c "ErrorLog /dev/stdout" \
  -c "CustomLog /dev/stdout '%h %l %u %t %r %>s %b'" \
  -c "ServerName localhost" \
  -e info \
  $FLAG \
  -D FOREGROUND
